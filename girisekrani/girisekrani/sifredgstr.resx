<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>