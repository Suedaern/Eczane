<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>